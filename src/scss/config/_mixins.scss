@import "./config";

@mixin width–°anvas($canvas: $maxWidthContainer, $indent: $fields) {
    max-width: calc($canvas + $indent * 2);
    padding-left: $indent;
    padding-right: $indent;
    margin: 0px auto;
}

@mixin mediaCanvas($canvas: $break_lg, $indent: $fields) {
    @media screen and (max-width: $canvas) {
        max-width: calc($canvas + $indent * 2);
        padding-left: $indent;
        padding-right: $indent;
        margin: 0px auto;
    }
}
@mixin margin-flex($value: $offset_no_px / 2, $val_bottom: 0) {
    margin-left: #{$value}px;
    margin-right: #{$value}px;
    @if $val_bottom == 0 {
        
    }@else {
        margin-bottom: #{$val_bottom}px;
    }
}
@mixin mediaMaxMin($max_width, $min_width) {
    @media screen and (min-width: $min_width) and (max-width: $max_width) {
        @content;
    }
}
@mixin mediaMax($max-width: $break_lg) {
    @media screen and (max-width: $max-width) {
        @content;
    }
}

@mixin mediaMin($min-width: $break_lg) {
    @media screen and (min-width: $min-width) {
        @content;
    }
}
// ======================= Grid mixins =====================================
@mixin col() {
    box-sizing: border-box;
    word-wrap: break-word;
    @include col-offsets(margin);
}
@mixin size($n){
    $val: 100% / $columns * $n;
    width: #{calc(#{$val} - #{$offset})};
}

@mixin col-offsets($type){
    #{$type}-left: $offset_one_side;
    #{$type}-right: $offset_one_side;
}

@mixin size-xxlg($n){
    $val: 100% / $columns * $n;
    @include xxlg(width, #{calc(#{$val} - #{$offset_xxlg})});
}

@mixin size-xlg($n){
    $val: 100% / $columns * $n;
    @include xlg(width, #{calc(#{$val} - #{$offset_xlg})});
}

@mixin size-lg($n){
    $val: 100% / $columns * $n;
    @include lg(width, #{calc(#{$val} - #{$offset_lg})});
}

@mixin size-md($n){
    $val: 100% / $columns * $n;
    @include md(width, #{calc(#{$val} - #{$offset_md})});
}

@mixin size-sm($n){
    $val: 100% / $columns * $n;
    @include sm(width, #{calc(#{$val} - #{$offset_sm})});
}

@mixin size-xs($n){
    $val: 100% / $columns * $n;
    @include xs(width, #{calc(#{$val} - #{$offset_xs})});
}

@mixin size-xxs($n){
    $val: 100% / $columns * $n;
    @include xxs(width, #{calc(#{$val} - #{$offset_xxs})});
}

@mixin xxlg-block() {
    @media screen and (max-width: $break_xxlg) {
        @content;
    }
}

@mixin xlg-block() {
    @media screen and (max-width: $break_xlg) {
        @content;
    }
}

@mixin lg-block() {
    @media screen and (max-width: $break_lg) {
        @content;
    }
}

@mixin md-block() {
    @media screen and (max-width: $break_md) {
        @content;
    }
}

@mixin sm-block() {
    @media screen and (max-width: $break_sm) {
        @content;
    }
}

@mixin xs-block() {
    @media screen and (max-width: $break_xs) {
        @content;
    }
}

@mixin xxs-block() {
    @media screen and (max-width: $break_xxs) {
        @content;
    }
}

@mixin xxlg($name, $value) {
    @media screen and (max-width: $break_xxlg) {
        #{$name}: $value;
    }
}
@mixin xlg($name, $value) {
    @media screen and (max-width: $break_xlg) {
        #{$name}: $value;
    }
}
@mixin lg($name, $value) {
    @media screen and (max-width: $break_lg) {
        #{$name}: $value;
    }
}
@mixin md($name, $value) {
    @media screen and (max-width: $break_md) {
        #{$name}: $value;
    }
}
@mixin sm($name, $value) {
    @media screen and (max-width: $break_sm) {
        #{$name}: $value;
    }
}
@mixin xs($name, $value) {
    @media screen and (max-width: $break_xs) {
        #{$name}: $value;
    }
}
@mixin xxs($name, $value) {
    @media screen and (max-width: $break_xxs) {
        #{$name}: $value;
    }
}

@mixin reset() {

    body,
    div,
    dl,
    dt,
    dd,
    ul,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    pre,
    code,
    form,
    fieldset,
    input,
    textarea,
    p,
    blockquote,
    th,
    td,
    hr {
        margin: 0;
        padding: 0;
    }

    table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    fieldset,
    img,
    abbr {
        border: 0;
    }

    address,
    caption,
    cite,
    code,
    dfn,
    em,
    strong,
    th,
    var {
        font-style: normal;
        font-weight: normal;
    }

    ul li {
        list-style: none;
    }

    caption,
    th {
        text-align: left;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: 100%;
        font-weight: normal;
    }

    sup {
        vertical-align: text-top;
    }

    sub {
        vertical-align: text-bottom;
    }

    input,
    textarea,
    select {
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        outline: none;
        border: none;
    }

    legend {
        color: #000;
    }

    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    menu,
    nav,
    section,
    main {
        display: block;
    }
    button {
        background-color: #fff;
        border: none;
        cursor: pointer;
    }
    a {
        color: #000;
        text-decoration-line: none;
    }
    img {
        max-width: 100%;
        height: auto;
    }
}